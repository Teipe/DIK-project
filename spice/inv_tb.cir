* Pixel sensor testbench
**********************************************************************
**        Copyright (c) 2021 Carsten Wulff Software, Norway
** *******************************************************************
** Created       : wulff at 2021-7-22
** *******************************************************************
**  The MIT License (MIT)
**
**  Permission is hereby granted, free of charge, to any person obtaining a copy
**  of this software and associated documentation files (the "Software"), to deal
**  in the Software without restriction, including without limitation the rights
**  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
**  copies of the Software, and to permit persons to whom the Software is
**  furnished to do so, subject to the following conditions:
**
**  The above copyright notice and this permission notice shall be included in all
**  copies or substantial portions of the Software.
**
**  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
**  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
**  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
**  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
**  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
**  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
**  SOFTWARE.
**
**********************************************************************

*----------------------------------------------------------------
* Include
*----------------------------------------------------------------
.include ../../models/ptm_130_ngspice.spi
.include ../../lib/SUN_TR_GF130N.spi

*----------------------------------------------------------------
* Options
*----------------------------------------------------------------
* .option TNOM=27 GMIN=1e-15 reltol=1e-6 abstol=1e-6

*----------------------------------------------------------------
* PARAMETERS
*----------------------------------------------------------------

.param TRF = 10n
.param TCLK = 75n
.param C_ERASE = 5

*- Pulse Width of control signals
.param PW_ERASE =  {(C_ERASE +1)*TCLK}

*- Delay of control signals
.param TD_ERASE = {TCLK }
* .param TD_EXPOSE = {TD_ERASE + PW_ERASE + TCLK}
* .param TD_CONVERT = {TD_EXPOSE + PW_EXPOSE + TCLK}
* .param TD_READ = {TD_CONVERT + PW_CONVERT + TCLK}
.param PERIOD = {TD_ERASE + PW_ERASE + TCLK}

*- Analog parameters
.param VDD = 1.5
* .param VADC_MIN = 0.5
* .param VADC_MAX = 1.1
* .param VADC_REF = {VADC_MAX - VADC_MIN}
* .param VADC_LSB = {VADC_REF/256}

*----------------------------------------------------------------
* Sources
*----------------------------------------------------------------
VDD VDD VSS dc VDD
VSS VSS 0 dc 0

*- Control signals
VIN VIN 0 dc 0 pulse (0 VDD TD_ERASE TRF TRF PW_ERASE PERIOD)
* VEXPOSE EXPOSE 0 dc 0 pulse (0 VDD TD_EXPOSE TRF TRF PW_EXPOSE PERIOD)
* VCONVERT CONVERT 0 dc 0 pulse (0 VDD TD_CONVERT TRF TRF PW_CONVERT PERIOD)
* VREAD READ 0 dc 0 pulse (0 VDD TD_READ TRF TRF PW_READ PERIOD)
* VSTORE VSTORE 0 dc 0.5
* Max at 1.385
* Min at 0.5

*- ADC related sources
* VREF VREF 0 DC VADC_REF
* VMAX VMAX 0 DC VADC_MAX
* VRESET VRESET VMAX DC 0
* VMIN VMIN 0 DC VADC_MIN

*----------------------------------------------------------------
* BIAS
*----------------------------------------------------------------
* Use a current mirror transistor from the SUN_TR_GF130N library
* IPB1 0 VBN1 dc 2.5u
* XMNB0 VBN1 VBN1 VSS VSS NCHCM2


*----------------------------------------------------------------
* DUT
*----------------------------------------------------------------
.include pixelSensor.cir
XINV VIN VOUT VDD VSS INV

*----------------------------------------------------------------
* NGSPICE control
*----------------------------------------------------------------

.control
set color0=white
set color1=black
unset askquit
tran 1n 1u
*plot V(ERASE) V(EXPOSE) V(CONVERT) V(READ)
* plot V(VRAMP) V(CONVERT) V(ERASE)
* plot V(DO)
plot V(VIN) V(VOUT)
plot I(VDD)  title "Inverter current drain"

* plot v(xdut.xm1.xm1.vg) v(xdut.xm1.xm1.dmem)
* plot v(xdut.xm1.xm2.vg) v(xdut.xm1.xm2.dmem)
* plot v(xdut.xm1.xm3.vg) v(xdut.xm1.xm3.dmem)
* plot v(xdut.xm1.xm4.vg) v(xdut.xm1.xm4.dmem)
* plot v(xdut.xm1.xm5.vg) v(xdut.xm1.xm5.dmem)
* plot v(xdut.xm1.xm6.vg) v(xdut.xm1.xm6.dmem)
* plot v(xdut.xm1.xm7.vg) v(xdut.xm1.xm7.dmem)
* plot v(xdut.xm1.xm8.vg) v(xdut.xm1.xm8.dmem)
.endc
.end
